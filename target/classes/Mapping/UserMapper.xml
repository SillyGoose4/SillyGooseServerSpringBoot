<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sillygoose.service.Mapper.UserMapper">
    <resultMap id="UserResultMap" type="com.sillygoose.service.Model.User">
        <id column="userId" jdbcType="INTEGER" property="userId" />
        <result column="userName" jdbcType="VARCHAR" property="userName" />
        <result column="userPasswd" jdbcType="VARCHAR" property="userPasswd" />
        <result column="userPhone" jdbcType="VARCHAR" property="userPhone" />
        <result column="userStatus" jdbcType="INTEGER" property="userStatus"/>
        <result column="lastSignIn" javaType="java.util.Date" jdbcType="TIMESTAMP" property="lastSignIn"/>
    </resultMap>

    <insert id="createUser" parameterType="com.sillygoose.service.Model.User">
        <selectKey resultType="java.lang.Integer" keyProperty="userId" order="AFTER">
            select @@IDENTITY as userId
        </selectKey>
        insert into tUser(userName,userPasswd,userPhone) VALUES (#{userName,jdbcType=VARCHAR},#{userPasswd,jdbcType=VARCHAR},#{userPhone,jdbcType=VARCHAR})
    </insert>

    <select id="selectByPhone" parameterType="java.lang.String" resultMap="UserResultMap">
        select * from tUser where userPhone = #{userPhone}
    </select>

    <select id="selectById" parameterType="java.lang.Integer" resultMap="UserResultMap">
        select * from tUser where userId = #{userId}
    </select>

    <select id="selectCountByPhone" parameterType="java.lang.String" resultType="java.lang.Integer">
        select count(distinct userPhone) from tUser where userPhone = #{userPhone}
    </select>

    <select id="selectByPhoneOne" parameterType="java.lang.String" resultMap="UserResultMap">
        select * from tUser where userPhone = #{userPhone}
    </select>

    <select id="selectByPhoneForId" parameterType="java.lang.String" resultType="java.lang.Integer">
        select userId from tUser where userPhone = #{userPhone}
    </select>

    <update id="updateStatus" parameterType="com.sillygoose.service.Model.User" >
        update tUser
        <set>
            <if test="userStatus==1">
                userStatus = 0
            </if>
            <if test="userStatus==0">
                userStatus = 1
            </if>
        </set>
        where userId = #{userId}
    </update>

    <update id="updateSignInTime" parameterType="com.sillygoose.service.Model.User" >
        update tUser set LastSignIn = #{lastSignIn} where userId = #{userId}
    </update>

</mapper>